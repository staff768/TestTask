basePath: /
definitions:
  models.CreateSubscriptionRequest:
    properties:
      end_date:
        type: string
      price:
        minimum: 1
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Subscription:
    properties:
      end_date:
        type: string
      id:
        type: integer
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  models.TotalResponse:
    properties:
      total:
        type: integer
    type: object
  models.UpdateSubscriptionRequest:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
    type: object
info:
  contact: {}
  description: API for managing subscriptions with Redis caching
  title: TestTask Subscriptions API
  version: "1.0"
paths:
  /subscription:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Subscription
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create subscription
      tags:
      - subscriptions
  /subscription/{id}:
    delete:
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete subscription by id
      tags:
      - subscriptions
    get:
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get subscription by id
      tags:
      - subscriptions
    patch:
      consumes:
      - application/json
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Subscription
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update subscription by id
      tags:
      - subscriptions
  /subscription/total:
    get:
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: User ID (UUID)
        in: query
        name: user_id
        type: string
      - description: Service name
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TotalResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Sum total price of subscriptions
      tags:
      - subscriptions
swagger: "2.0"
